<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Masashi Shibamoto</title>
    <link>/project/</link>
    <description>Recent content in Projects on Masashi Shibamoto</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Mar 2019 22:19:28 +0900</lastBuildDate>
    
	<atom:link href="/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Managed EA</title>
      <link>/project/managed-ea/</link>
      <pubDate>Mon, 04 Mar 2019 22:19:28 +0900</pubDate>
      
      <guid>/project/managed-ea/</guid>
      <description>EA管理システム - Managed-EA 背景 EAを複数人で利用している想定のため、いくつかほしい機能があった。
機能 簡単に言うと下記
 EAを使うユーザーの認証 EAを使うユーザーの登録・編集 各ユーザーの決済履歴  技術スタック react + dataStore + GAE
こちらは、下記をフォークしFeaturesをいくつか追加したもの https://github.com/osamu38/react-ssr-starter
関連リポジトリ https://github.com/Silver-birder/managed-ea</description>
    </item>
    
    <item>
      <title>Web Ar</title>
      <link>/project/web-ar/</link>
      <pubDate>Mon, 04 Mar 2019 22:04:29 +0900</pubDate>
      
      <guid>/project/web-ar/</guid>
      <description>Web上でAR体験 - Web-AR 背景 https://www.youtube.com/watch?v=rIPfpGCxONQ この動画が発端となる。
ARをどうしても触ってみたかった。 ただ、ネイティブアプリではなくWeb上で表現できないか考えていた。 three.jsを使えばイケるかも！？とやってみた。
機能 簡単に言うと下記
 three.jsで現実世界にオブジェクトを生成する 座標位置とオブジェクトとの距離により見え方が変わる オブジェクトに接すると、中の世界が見えるようになる  技術スタック javascript(three.js)
関連リポジトリ frontend javascript(three.js)
backend golang
https://github.com/Silver-birder/web-ar</description>
    </item>
    
    <item>
      <title>Text_lint</title>
      <link>/project/text_lint/</link>
      <pubDate>Mon, 04 Mar 2019 22:03:41 +0900</pubDate>
      
      <guid>/project/text_lint/</guid>
      <description>文章向けLinter - text_lint $ npm install $ echo &amp;quot;I love docker&amp;quot; &amp;gt;&amp;gt; sample.md $ npm run lint sample.md -s text_lint/sample.md 1:8 ✓ error docker =&amp;gt; Docker prh ✖ 1 problem (1 error, 0 warnings) ✓ 1 fixable problem. Try to run: $ textlint --fix [file]  背景 文章を書いていて、表記ゆれが多々あった。 それをなんとか防ぎたかった。
機能 簡単に言うと下記
 有名なIT向け辞書を登録済みなので、誤りを検知してくれる。 git hookと合わせれば、commit時に検知できる。 辞書をカスタマイズできるので、自分にあった検知が作れる。  技術スタック node.js
関連リポジトリ https://github.com/Silver-birder/text_lint</description>
    </item>
    
    <item>
      <title>Share Session</title>
      <link>/project/share-session/</link>
      <pubDate>Mon, 04 Mar 2019 22:03:35 +0900</pubDate>
      
      <guid>/project/share-session/</guid>
      <description>セッション共有 - Share-Session 背景 とあるサービスのアカウントを共有したかった。
機能 簡単に言うと下記
 Cookieデータを登録・編集できる ブックマークレットから、共有したいサイトでCookie設定できる  技術スタック golang + dataStore + GAE
関連リポジトリ frontend　and backend golang https://github.com/Silver-birder/share_session</description>
    </item>
    
    <item>
      <title>Search Local Web</title>
      <link>/project/search-local-web/</link>
      <pubDate>Mon, 04 Mar 2019 22:03:28 +0900</pubDate>
      
      <guid>/project/search-local-web/</guid>
      <description>ローカル検索 - Search-Local-Web 背景 過去に検索した記事を思い出せず、苦労したことがある。 検索履歴をローカルに保存して全文検索できるようにしたい。
機能 簡単に言うと下記
 URLからHTMLを取得し、googleDriveにドキュメント保存できる 思い出しているキーワードから全文検索できる(googleDriveApi) LINKから、記事をアクセスできる  技術スタック node.js(express) + googleDrive + GAE
関連リポジトリ https://github.com/Silver-birder/search-local-web</description>
    </item>
    
    <item>
      <title>ReactNative_Web_Electron</title>
      <link>/project/reactnative_web_electron/</link>
      <pubDate>Mon, 04 Mar 2019 22:03:14 +0900</pubDate>
      
      <guid>/project/reactnative_web_electron/</guid>
      <description>ReactNative_Web_Electron - One Logic 背景 WebApp,MobileApp,DesktopAppを共通の言語で開発したいなと考えていた。 View側はプラットフォーム毎に用意して、Logicは共通化したかった。 (仕組みは用意したものの、途中で諦めた)
機能 簡単に言うと下記
 src/native, src/webでプラットフォーム毎のViewを作成できる src/actionsでロジック部分を共通化する src/storeでデータを集約する  技術スタック reactNative + react.js + electron　+ expo.io
関連リポジトリ https://github.com/Silver-birder/rss_reader</description>
    </item>
    
    <item>
      <title>Amazon Calendar</title>
      <link>/project/gas-for-amazon-calendar/</link>
      <pubDate>Mon, 04 Mar 2019 22:02:12 +0900</pubDate>
      
      <guid>/project/gas-for-amazon-calendar/</guid>
      <description>AmazonCalendar - Gas for Amazon Calendar 背景 アマゾンで買った商品がいつ届くのかメールを いつも見ていたが、不便と感じた。googleCalendar に登録されればなと思った。
機能 簡単に言うと下記
 Amazonで購入した際に送られるメールからgoogleCalandarに「いつ届くのか」登録してくれる  技術スタック gas + gmail + googleCalendar
関連リポジトリ https://github.com/Silver-birder/gas-for-amazon-calendar</description>
    </item>
    
    <item>
      <title>Control EA</title>
      <link>/project/control-ea/</link>
      <pubDate>Mon, 04 Mar 2019 22:01:54 +0900</pubDate>
      
      <guid>/project/control-ea/</guid>
      <description>EAの制御システム - Control-EA 背景 FXでEAという自動売買プログラムがあるのだが、 外部から注文を停止・決済させたいときがあった。 https://www.fxstreet.jp/economic-calendar
要人発表時は、相場が大きく揺れてしまうので制御したかった。
機能 簡単に言うと下記
 Webアプリ上で、要人発表データを操作できる 要人発表データをEAがほぼリアルタイムに監視している ボラリティが高い相場時間帯は、注文しないようにする  技術スタック vue.js + golang + dataStore + now.sh
関連リポジトリ frontend vue.js https://github.com/Silver-birder/control-ea
backend golang https://github.com/Silver-birder/control-ea-api
batch node.js https://github.com/Silver-birder/control-ea-batch</description>
    </item>
    
    <item>
      <title>Google Word Cloud</title>
      <link>/project/google-word-cloud/</link>
      <pubDate>Mon, 04 Mar 2019 22:01:42 +0900</pubDate>
      
      <guid>/project/google-word-cloud/</guid>
      <description>Google検索履歴をWordCloud化 - Google Word Cloud 上記は、2019年1月のGoogle検索履歴。 golangとvueにハマっていた。
背景 下記のページより、Googleで検索したデータをダウンロードできることを知った。 https://takeout.google.com
そこで、WordCloudに流したら面白そうではないかと思った。
機能 簡単に言うと下記
 Google検索のような検索結果のjsonファイルを月毎に分割できる 検索結果のjsonファイルから単語を抽出できる 抽出した結果をWordCloudで出力した画像を取得できる  Google検索だけでなく下記も出力できる（他も可能かもしれないが私自身にデータがなかった)
 Gmail GoogleApps YouTube Drive Map 画像検索 動画検索  技術スタック python
関連リポジトリ python https://github.com/Silver-birder/google-word-cloud</description>
    </item>
    
    <item>
      <title>Book Store</title>
      <link>/project/book-store/</link>
      <pubDate>Fri, 01 Mar 2019 22:43:36 +0900</pubDate>
      
      <guid>/project/book-store/</guid>
      <description>書籍管理システム - Book-Store 背景 今持っている本がどれぐらいあるのか管理したくなったところから始まった
機能 簡単に言うと下記
 全文検索で書籍を検索できる ISBNで書籍登録できるし、変更もできる Amazonリンクにつながる  技術スタック vue.js + golang + algolia + now.sh
関連リポジトリ frontend vue.js https://github.com/Silver-birder/book-store-vue
backend golang https://github.com/Silver-birder/book-store-go</description>
    </item>
    
  </channel>
</rss>